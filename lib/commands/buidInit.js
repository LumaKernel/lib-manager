'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = buildInit;

require('source-map-support/register');

var _fsExtra = require('fs-extra');

var _fsExtra2 = _interopRequireDefault(_fsExtra);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const { resolve } = _path2.default;
const { existsSync, writeFileSync, readFileSync } = _fsExtra2.default;

function buildInit(config, project) {
  const src = resolve(process.cwd(), config.WorkingDir, config.SrcDir);
  const printlistPath = resolve(src, 'printlist.json');
  const printedPath = resolve(src, 'printed.json');
  if (existsSync(printlistPath)) throw '"printlist.json" already exists';
  if (!existsSync(printedPath)) {
    writeFileSync(printedPath, '{}');
  }
  const printed = JSON.parse(readFileSync(printedPath).toString());
  const printlist = [];
  Object.entries(project.libs).forEach(([key, value]) => {
    if (printed[key] === value.code) return;
    printlist.push(key);
  });
  writeFileSync(printlistPath, JSON.stringify(printlist));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21tYW5kcy9idWlkSW5pdC5qcyJdLCJuYW1lcyI6WyJidWlsZEluaXQiLCJyZXNvbHZlIiwicGF0aCIsImV4aXN0c1N5bmMiLCJ3cml0ZUZpbGVTeW5jIiwicmVhZEZpbGVTeW5jIiwiZnMiLCJjb25maWciLCJwcm9qZWN0Iiwic3JjIiwicHJvY2VzcyIsImN3ZCIsIldvcmtpbmdEaXIiLCJTcmNEaXIiLCJwcmludGxpc3RQYXRoIiwicHJpbnRlZFBhdGgiLCJwcmludGVkIiwiSlNPTiIsInBhcnNlIiwidG9TdHJpbmciLCJwcmludGxpc3QiLCJPYmplY3QiLCJlbnRyaWVzIiwibGlicyIsImZvckVhY2giLCJrZXkiLCJ2YWx1ZSIsImNvZGUiLCJwdXNoIiwic3RyaW5naWZ5Il0sIm1hcHBpbmdzIjoiOzs7OztrQkFLd0JBLFM7Ozs7QUFMeEI7Ozs7QUFDQTs7Ozs7O0FBQ0EsTUFBTSxFQUFFQyxPQUFGLEtBQWNDLGNBQXBCO0FBQ0EsTUFBTSxFQUFFQyxVQUFGLEVBQWNDLGFBQWQsRUFBNkJDLFlBQTdCLEtBQThDQyxpQkFBcEQ7O0FBRWUsU0FBU04sU0FBVCxDQUFvQk8sTUFBcEIsRUFBNEJDLE9BQTVCLEVBQXFDO0FBQ2xELFFBQU1DLE1BQU1SLFFBQVFTLFFBQVFDLEdBQVIsRUFBUixFQUF1QkosT0FBT0ssVUFBOUIsRUFBMENMLE9BQU9NLE1BQWpELENBQVo7QUFDQSxRQUFNQyxnQkFBZ0JiLFFBQVFRLEdBQVIsRUFBYSxnQkFBYixDQUF0QjtBQUNBLFFBQU1NLGNBQWNkLFFBQVFRLEdBQVIsRUFBYSxjQUFiLENBQXBCO0FBQ0EsTUFBSU4sV0FBV1csYUFBWCxDQUFKLEVBQStCLE1BQU0saUNBQU47QUFDL0IsTUFBSSxDQUFDWCxXQUFXWSxXQUFYLENBQUwsRUFBOEI7QUFDNUJYLGtCQUFjVyxXQUFkLEVBQTJCLElBQTNCO0FBQ0Q7QUFDRCxRQUFNQyxVQUFVQyxLQUFLQyxLQUFMLENBQVdiLGFBQWFVLFdBQWIsRUFBMEJJLFFBQTFCLEVBQVgsQ0FBaEI7QUFDQSxRQUFNQyxZQUFZLEVBQWxCO0FBQ0FDLFNBQU9DLE9BQVAsQ0FBZWQsUUFBUWUsSUFBdkIsRUFBNkJDLE9BQTdCLENBQXFDLENBQUMsQ0FBQ0MsR0FBRCxFQUFNQyxLQUFOLENBQUQsS0FBa0I7QUFDckQsUUFBSVYsUUFBUVMsR0FBUixNQUFpQkMsTUFBTUMsSUFBM0IsRUFBaUM7QUFDakNQLGNBQVVRLElBQVYsQ0FBZUgsR0FBZjtBQUNELEdBSEQ7QUFJQXJCLGdCQUFjVSxhQUFkLEVBQTZCRyxLQUFLWSxTQUFMLENBQWVULFNBQWYsQ0FBN0I7QUFDRCIsImZpbGUiOiJidWlkSW5pdC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmcyBmcm9tICdmcy1leHRyYSdcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnXG5jb25zdCB7IHJlc29sdmUgfSA9IHBhdGhcbmNvbnN0IHsgZXhpc3RzU3luYywgd3JpdGVGaWxlU3luYywgcmVhZEZpbGVTeW5jIH0gPSBmc1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBidWlsZEluaXQgKGNvbmZpZywgcHJvamVjdCkge1xuICBjb25zdCBzcmMgPSByZXNvbHZlKHByb2Nlc3MuY3dkKCksIGNvbmZpZy5Xb3JraW5nRGlyLCBjb25maWcuU3JjRGlyKVxuICBjb25zdCBwcmludGxpc3RQYXRoID0gcmVzb2x2ZShzcmMsICdwcmludGxpc3QuanNvbicpXG4gIGNvbnN0IHByaW50ZWRQYXRoID0gcmVzb2x2ZShzcmMsICdwcmludGVkLmpzb24nKVxuICBpZiAoZXhpc3RzU3luYyhwcmludGxpc3RQYXRoKSkgdGhyb3cgJ1wicHJpbnRsaXN0Lmpzb25cIiBhbHJlYWR5IGV4aXN0cydcbiAgaWYgKCFleGlzdHNTeW5jKHByaW50ZWRQYXRoKSkge1xuICAgIHdyaXRlRmlsZVN5bmMocHJpbnRlZFBhdGgsICd7fScpXG4gIH1cbiAgY29uc3QgcHJpbnRlZCA9IEpTT04ucGFyc2UocmVhZEZpbGVTeW5jKHByaW50ZWRQYXRoKS50b1N0cmluZygpKVxuICBjb25zdCBwcmludGxpc3QgPSBbXVxuICBPYmplY3QuZW50cmllcyhwcm9qZWN0LmxpYnMpLmZvckVhY2goKFtrZXksIHZhbHVlXSkgPT4ge1xuICAgIGlmIChwcmludGVkW2tleV0gPT09IHZhbHVlLmNvZGUpIHJldHVyblxuICAgIHByaW50bGlzdC5wdXNoKGtleSlcbiAgfSlcbiAgd3JpdGVGaWxlU3luYyhwcmludGxpc3RQYXRoLCBKU09OLnN0cmluZ2lmeShwcmludGxpc3QpKVxufVxuIl19